[
  {
    "type": "post",
    "url": "/places",
    "title": "Create a place",
    "name": "CreatePlace",
    "group": "Place",
    "version": "1.0.0",
    "description": "<p>Create a new place.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "POST /places HTTP/1.1\nContent-Type: application/json\n\n{\n  \"placeName\": \"place_1\",\n  \"placeDescription\": \"This is the description of the place_1.\",\n  \"placeCorrTrip\": 1\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "201 Created",
          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://comem-webserv-2018-2019-e.herokuapp.com/places/1\n\n{\n  \"_id\": \"5bdb19ad8cee2d018c55e6fa\",\n  \"placeid\": 1,\n  \"placeName\": \"place_1\",\n  \"placeDescription\": \"This is the description of the place_1.\",\n  \"placePicture\": \"https://muggli.one/heig/webs/missing-img.png\",\n  \"placeCreationDate\": \"2018-11-01T15:20:13.951Z\",\n  \"placeLastModDate\": \"2018-11-01T15:20:13.951Z\",\n  \"placeLatitude\": 0,\n  \"placeLongitude\": 0,\n  \"placeCorrTrip\": 1    \n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the place generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeid",
            "description": "<p>The unique identifier of the place</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeName",
            "description": "<p>The name of the place</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeDescription",
            "description": "<p>The description of the place (if any)</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placePicture",
            "description": "<p>The picture of the place, default value &quot;https://muggli.one/heig/webs/missing-img.png&quot;</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeCreationDate",
            "description": "<p>The date at which the place was created with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "placeLastModDate",
            "description": "<p>The date at which the place was modified with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeLatitude",
            "description": "<p>The latitude of the place</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeLongitude",
            "description": "<p>The longitude of the place</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeCorrTrip",
            "description": "<p>The tripid of the corresponding trip to the place</p>"
          }
        ]
      }
    },
    "filename": "routes/places.js",
    "groupTitle": "Place",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "3..",
            "optional": false,
            "field": "placeName",
            "description": "<p>The name of the place</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": true,
            "field": "placeDescription",
            "description": "<p>The description of the place</p>"
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "placeCorrTrip",
            "description": "<p>The tripid of the corresponding trip to the place</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": true,
            "field": "placePicture",
            "description": "<p>The picture of the place with default value &quot;https://muggli.one/heig/webs/missing-img.png&quot;</p>"
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "placeLatitude",
            "description": "<p>The latitude of the place with default value 0.000000</p>"
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "placeLongitude",
            "description": "<p>The longitude of the place with default value 0.000000</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "401/Unauthorized",
            "description": "<p>User is not authorized to create this place.</p>"
          }
        ],
        "Error 5xx": [
          {
            "group": "Error 5xx",
            "type": "Object",
            "optional": false,
            "field": "500/InternalServerError",
            "description": "<p>Some of the place's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "401 Unauthorized",
          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n\nAuthorization header is missing",
          "type": "json"
        },
        {
          "title": "500 Internal Server Error",
          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n\n{\n  \"message\": Place validation failed: placeName: Path `placeName` (`1`) is shorter than the minimum allowed length (3).\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "delete",
    "url": "/places/:placeid",
    "title": "Delete a place",
    "name": "DeletePlace",
    "group": "Place",
    "version": "1.0.0",
    "description": "<p>Permanently deletes a place.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "DELETE /places/1 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "204 No Content",
          "content": "HTTP/1.1 204 No Content",
          "type": "json"
        }
      ]
    },
    "filename": "routes/places.js",
    "groupTitle": "Place",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "Number",
            "optional": false,
            "field": "placeid",
            "description": "<p>The unique identifier of the place to retrieve</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No place was found corresponding to the placeid in the URL path</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo place found with ID 1",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "patch",
    "url": "/places/:placeid",
    "title": "Partially update a place",
    "name": "PartiallyUpdatePlace",
    "group": "Place",
    "version": "1.0.0",
    "description": "<p>Partially updates a place's data (only the properties found in the request body will be updated). All properties are optional.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "PATCH /places/1 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"placeName\": \"place_1_new\"\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"_id\": \"5bdb19ad8cee2d018c55e6fa\",\n  \"placeid\": 1,\n  \"placeName\": \"place_1_new\",\n  \"placeDescription\": \"This is the description of the place_1.\",\n  \"placePicture\": \"https://muggli.one/heig/webs/missing-img.png\",\n  \"placeCreationDate\": \"2018-11-01T15:20:13.951Z\",\n  \"placeLastModDate\": \"2018-11-01T15:28:25.243Z\",\n  \"placeLatitude\": 0,\n  \"placeLongitude\": 0,\n  \"placeCorrTrip\": 1 \n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the place generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeid",
            "description": "<p>The unique identifier of the place</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeName",
            "description": "<p>The name of the place</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeDescription",
            "description": "<p>The description of the place (if any)</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placePicture",
            "description": "<p>The picture of the place, default value &quot;https://muggli.one/heig/webs/missing-img.png&quot;</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeCreationDate",
            "description": "<p>The date at which the place was created with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "placeLastModDate",
            "description": "<p>The date at which the place was modified with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeLatitude",
            "description": "<p>The latitude of the place</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeLongitude",
            "description": "<p>The longitude of the place</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeCorrTrip",
            "description": "<p>The tripid of the corresponding trip to the place</p>"
          }
        ]
      }
    },
    "filename": "routes/places.js",
    "groupTitle": "Place",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "Number",
            "optional": false,
            "field": "placeid",
            "description": "<p>The unique identifier of the place to retrieve</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "3..",
            "optional": false,
            "field": "placeName",
            "description": "<p>The name of the place</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": true,
            "field": "placeDescription",
            "description": "<p>The description of the place</p>"
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "placeCorrTrip",
            "description": "<p>The tripid of the corresponding trip to the place</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": true,
            "field": "placePicture",
            "description": "<p>The picture of the place with default value &quot;https://muggli.one/heig/webs/missing-img.png&quot;</p>"
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "placeLatitude",
            "description": "<p>The latitude of the place with default value 0.000000</p>"
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "placeLongitude",
            "description": "<p>The longitude of the place with default value 0.000000</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No place was found corresponding to the placeid in the URL path</p>"
          },
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "401/Unauthorized",
            "description": "<p>User is not authorized to create this place.</p>"
          }
        ],
        "Error 5xx": [
          {
            "group": "Error 5xx",
            "type": "Object",
            "optional": false,
            "field": "500/InternalServerError",
            "description": "<p>Some of the place's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo place found with ID 1",
          "type": "json"
        },
        {
          "title": "401 Unauthorized",
          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n\nAuthorization header is missing",
          "type": "json"
        },
        {
          "title": "500 Internal Server Error",
          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n\n{\n  \"message\": Place validation failed: placeName: Path `placeName` (`1`) is shorter than the minimum allowed length (3).\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/places/:placeid",
    "title": "Retrieve a place",
    "name": "RetrievePlace",
    "group": "Place",
    "version": "1.0.0",
    "description": "<p>Retrieves one place.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "GET /places/1 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLocation: https://comem-webserv-2018-2019-e.herokuapp.com/places/1\n\n{\n  \"_id\": \"5bdb19ad8cee2d018c55e6fa\",\n  \"placeid\": 1,\n  \"placeName\": \"place_1\",\n  \"placeDescription\": \"This is the description of the place_1.\",\n  \"placePicture\": \"https://muggli.one/heig/webs/missing-img.png\",\n  \"placeCreationDate\": \"2018-11-01T15:20:13.951Z\",\n  \"placeLastModDate\": \"2018-11-01T15:20:13.951Z\",\n  \"placeLatitude\": 0,\n  \"placeLongitude\": 0,\n  \"placeCorrTrip\": 1 \n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the place generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeid",
            "description": "<p>The unique identifier of the place</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeName",
            "description": "<p>The name of the place</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeDescription",
            "description": "<p>The description of the place (if any)</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placePicture",
            "description": "<p>The picture of the place, default value &quot;https://muggli.one/heig/webs/missing-img.png&quot;</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeCreationDate",
            "description": "<p>The date at which the place was created with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "placeLastModDate",
            "description": "<p>The date at which the place was modified with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeLatitude",
            "description": "<p>The latitude of the place</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeLongitude",
            "description": "<p>The longitude of the place</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeCorrTrip",
            "description": "<p>The tripid of the corresponding trip to the place</p>"
          }
        ]
      }
    },
    "filename": "routes/places.js",
    "groupTitle": "Place",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "Number",
            "optional": false,
            "field": "placeid",
            "description": "<p>The unique identifier of the place to retrieve</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No place was found corresponding to the placeid in the URL path</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo place found with ID 1",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/places",
    "title": "List places",
    "name": "RetrievePlaces",
    "group": "Place",
    "version": "1.0.0",
    "description": "<p>Retrieves a list of places sorted by placeid (in ascending order).</p>",
    "examples": [
      {
        "title": "Example",
        "content": "GET /places HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLocation: https://comem-webserv-2018-2019-e.herokuapp.com/places/page=1&pageSize=10\n\n[\n  {\n    \"_id\": \"5bdb19ad8cee2d018c55e6fa\",\n    \"placeid\": 1,\n    \"placeName\": \"place_1\",\n    \"placeDescription\": \"This is the description of the place_1.\",\n    \"placePicture\": \"https://muggli.one/heig/webs/missing-img.png\",\n    \"placeCreationDate\": \"2018-11-01T15:20:13.951Z\",\n    \"placeLastModDate\": \"2018-11-01T15:20:13.951Z\",\n    \"placeLatitude\": 0,\n    \"placeLongitude\": 0,\n    \"placeCorrTrip\": 1\n  },\n  {\n    \"_id\": \"5bdb1a808cee2d018c55e6fc\",\n    \"placeid\": 2,\n    \"placeName\": \"place_2\",\n    \"placeDescription\": \"This is the description of the place_2.\",\n    \"placePicture\": \"https://muggli.one/heig/webs/missing-img.png\",\n    \"placeCreationDate\": \"2018-11-01T15:23:44.008Z\",\n    \"placeLastModDate\": \"2018-11-01T15:23:44.008Z\",\n    \"placeLatitude\": 0,\n    \"placeLongitude\": 0,\n    \"placeCorrTrip\": 1\n  },\n  {\n    \"_id\": \"5bdb1a888cee2d018c55e6fd\",\n    \"placeid\": 3,\n    \"placeName\": \"place_3\",\n    \"placeDescription\": \"This is the description of the place_3.\",\n    \"placePicture\": \"https://muggli.one/heig/webs/missing-img.png\",\n    \"placeCreationDate\": \"2018-11-01T15:23:52.043Z\",\n    \"placeLastModDate\": \"2018-11-01T15:23:52.043Z\",\n    \"placeLatitude\": 0,\n    \"placeLongitude\": 0,\n    \"placeCorrTrip\": 2\n  }\n]",
          "type": "json"
        },
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLocation: https://comem-webserv-2018-2019-e.herokuapp.com/places?placeCorrTrip=2\n\n[\n  {\n    \"_id\": \"5bdb1a888cee2d018c55e6fd\",\n    \"placeid\": 3,\n    \"placeName\": \"place_3\",\n    \"placeDescription\": \"This is the description of the place_3.\",\n    \"placePicture\": \"https://muggli.one/heig/webs/missing-img.png\",\n    \"placeCreationDate\": \"2018-11-01T15:23:52.043Z\",\n    \"placeLastModDate\": \"2018-11-01T15:23:52.043Z\",\n    \"placeLatitude\": 0,\n    \"placeLongitude\": 0,\n    \"placeCorrTrip\": 2\n  }\n]",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the place generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeid",
            "description": "<p>The unique identifier of the place</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeName",
            "description": "<p>The name of the place</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeDescription",
            "description": "<p>The description of the place (if any)</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placePicture",
            "description": "<p>The picture of the place, default value &quot;https://muggli.one/heig/webs/missing-img.png&quot;</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeCreationDate",
            "description": "<p>The date at which the place was created with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "placeLastModDate",
            "description": "<p>The date at which the place was modified with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeLatitude",
            "description": "<p>The latitude of the place</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeLongitude",
            "description": "<p>The longitude of the place</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeCorrTrip",
            "description": "<p>The tripid of the corresponding trip to the place</p>"
          }
        ]
      }
    },
    "filename": "routes/places.js",
    "groupTitle": "Place",
    "parameter": {
      "fields": {
        "URL query parameters": [
          {
            "group": "URL query parameters",
            "type": "Number",
            "optional": true,
            "field": "placeCorrTrip",
            "description": "<p>Select only places corresponding to a specific trip (this parameter can be given multiple times)</p>"
          },
          {
            "group": "URL query parameters",
            "type": "Number",
            "size": "1..",
            "optional": true,
            "field": "page",
            "description": "<p>The page to retrieve (defaults to 1)</p>"
          },
          {
            "group": "URL query parameters",
            "type": "Number",
            "size": "1..10",
            "optional": true,
            "field": "pageSize",
            "description": "<p>The number of elements to retrieve in one page (defaults to 10)</p>"
          }
        ],
        "Response headers": [
          {
            "group": "Response headers",
            "type": "String",
            "optional": false,
            "field": "Link",
            "description": "<p>Links to the first, previous, next and last pages of the collection (if applicable) =&gt; Custom headers (solution 2)</p>"
          }
        ]
      }
    }
  },
  {
    "type": "put",
    "url": "/places/:placeid",
    "title": "Update a place",
    "name": "UpdatePlace",
    "group": "Place",
    "version": "1.0.0",
    "description": "<p>Replaces all the place's data (the request body must represent a full, valid place).</p>",
    "examples": [
      {
        "title": "Example",
        "content": "PUT /places/1 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"placeName\": \"place_1_new\",\n  \"placeDescription\": \"This is the new description of the place_1.\",\n  \"placeCreator\": 2\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"_id\": \"5bdb19ad8cee2d018c55e6fa\",\n  \"placeid\": 1,\n  \"placeName\": \"place_1_new\",\n  \"placeDescription\": \"This is the new description of the place_1.\",\n  \"placePicture\": \"https://muggli.one/heig/webs/missing-img.png\",\n  \"placeCreationDate\": \"2018-11-01T15:20:13.951Z\",\n  \"placeLastModDate\": \"2018-11-01T15:28:25.243Z\",\n  \"placeLatitude\": 0,\n  \"placeLongitude\": 0,\n  \"placeCorrTrip\": 2 \n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the place generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeid",
            "description": "<p>The unique identifier of the place</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeName",
            "description": "<p>The name of the place</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeDescription",
            "description": "<p>The description of the place (if any)</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placePicture",
            "description": "<p>The picture of the place, default value &quot;https://muggli.one/heig/webs/missing-img.png&quot;</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeCreationDate",
            "description": "<p>The date at which the place was created with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "placeLastModDate",
            "description": "<p>The date at which the place was modified with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeLatitude",
            "description": "<p>The latitude of the place</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeLongitude",
            "description": "<p>The longitude of the place</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeCorrTrip",
            "description": "<p>The tripid of the corresponding trip to the place</p>"
          }
        ]
      }
    },
    "filename": "routes/places.js",
    "groupTitle": "Place",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "Number",
            "optional": false,
            "field": "placeid",
            "description": "<p>The unique identifier of the place to retrieve</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "3..",
            "optional": false,
            "field": "placeName",
            "description": "<p>The name of the place</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": true,
            "field": "placeDescription",
            "description": "<p>The description of the place</p>"
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "placeCorrTrip",
            "description": "<p>The tripid of the corresponding trip to the place</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": true,
            "field": "placePicture",
            "description": "<p>The picture of the place with default value &quot;https://muggli.one/heig/webs/missing-img.png&quot;</p>"
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "placeLatitude",
            "description": "<p>The latitude of the place with default value 0.000000</p>"
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "placeLongitude",
            "description": "<p>The longitude of the place with default value 0.000000</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No place was found corresponding to the placeid in the URL path</p>"
          },
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "401/Unauthorized",
            "description": "<p>User is not authorized to create this place.</p>"
          }
        ],
        "Error 5xx": [
          {
            "group": "Error 5xx",
            "type": "Object",
            "optional": false,
            "field": "500/InternalServerError",
            "description": "<p>Some of the place's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo place found with ID 1",
          "type": "json"
        },
        {
          "title": "401 Unauthorized",
          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n\nAuthorization header is missing",
          "type": "json"
        },
        {
          "title": "500 Internal Server Error",
          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n\n{\n  \"message\": Place validation failed: placeName: Path `placeName` (`1`) is shorter than the minimum allowed length (3).\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "post",
    "url": "/trips",
    "title": "Create a trip",
    "name": "CreateTrip",
    "group": "Trip",
    "version": "1.0.0",
    "description": "<p>Create a new trip.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "POST /trips HTTP/1.1\nContent-Type: application/json\n\n{\n  \"tripName\": \"trip_1\",\n  \"tripDescription\": \"This is the description of the trip_1.\",\n  \"tripCreator\": 1\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "201 Created",
          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://comem-webserv-2018-2019-e.herokuapp.com/trips/1\n\n{\n  \"_id\": \"5bd9e744e80f0065a0c7fcd6\",\n  \"tripid\": 1,\n  \"tripName\": \"trip_1\",\n  \"tripDescription\": \"This is the description of the trip_1.\",\n  \"tripCreationDate\": \"2018-10-31T17:32:52.449Z\",\n  \"tripLastModDate\": \"2018-10-31T17:32:52.449Z\",\n  \"tripCreator\": 1\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the trip generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "tripid",
            "description": "<p>The unique identifier of the trip</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "tripName",
            "description": "<p>The name of the trip</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "tripDescription",
            "description": "<p>The description of the trip (if any)</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "tripCreationDate",
            "description": "<p>The date at which the trip was created with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "tripLastModDate",
            "description": "<p>The date at which the trip was modified with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "tripCreator",
            "description": "<p>The userid of the creator of the trip</p>"
          }
        ]
      }
    },
    "filename": "routes/trips.js",
    "groupTitle": "Trip",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "3..",
            "optional": false,
            "field": "tripName",
            "description": "<p>The name of the trip</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": true,
            "field": "tripDescription",
            "description": "<p>The description of the trip</p>"
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "tripCreator",
            "description": "<p>The userid of the creator of the trip</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "401/Unauthorized",
            "description": "<p>User is not authorized to create this trip.</p>"
          }
        ],
        "Error 5xx": [
          {
            "group": "Error 5xx",
            "type": "Object",
            "optional": false,
            "field": "500/InternalServerError",
            "description": "<p>Some of the trip's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "401 Unauthorized",
          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n\nAuthorization header is missing",
          "type": "json"
        },
        {
          "title": "500 Internal Server Error",
          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n\n{\n  \"message\": Trip validation failed: tripName: Path `tripName` (`1`) is shorter than the minimum allowed length (3).\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "delete",
    "url": "/trips/:tripid",
    "title": "Delete a trip",
    "name": "DeleteTrip",
    "group": "Trip",
    "version": "1.0.0",
    "description": "<p>Permanently deletes a trip.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "DELETE /trips/1 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "204 No Content",
          "content": "HTTP/1.1 204 No Content",
          "type": "json"
        }
      ]
    },
    "filename": "routes/trips.js",
    "groupTitle": "Trip",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "Number",
            "optional": false,
            "field": "tripid",
            "description": "<p>The unique identifier of the trip to retrieve</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No trip was found corresponding to the tripid in the URL path</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo trip found with ID 1",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "patch",
    "url": "/trips/:tripid",
    "title": "Partially update a trip",
    "name": "PartiallyUpdateTrip",
    "group": "Trip",
    "version": "1.0.0",
    "description": "<p>Partially updates a trip's data (only the properties found in the request body will be updated). All properties are optional.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "PATCH /trips/1 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"tripName\": \"trip_1_new\"\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"_id\": \"5bd9e744e80f0065a0c7fcd6\",\n  \"tripid\": 1,\n  \"tripName\": \"trip_1_new\",\n  \"tripDescription\": \"This is the description of the trip_1.\",\n  \"tripCreationDate\": \"2018-10-31T17:32:52.449Z\",\n  \"tripLastModDate\": \"2018-11-31T20:15:10.613Z\",\n  \"tripCreator\": 1\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the trip generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "tripid",
            "description": "<p>The unique identifier of the trip</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "tripName",
            "description": "<p>The name of the trip</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "tripDescription",
            "description": "<p>The description of the trip (if any)</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "tripCreationDate",
            "description": "<p>The date at which the trip was created with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "tripLastModDate",
            "description": "<p>The date at which the trip was modified with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "tripCreator",
            "description": "<p>The userid of the creator of the trip</p>"
          }
        ]
      }
    },
    "filename": "routes/trips.js",
    "groupTitle": "Trip",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "Number",
            "optional": false,
            "field": "tripid",
            "description": "<p>The unique identifier of the trip to retrieve</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "3..",
            "optional": false,
            "field": "tripName",
            "description": "<p>The name of the trip</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": true,
            "field": "tripDescription",
            "description": "<p>The description of the trip</p>"
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "tripCreator",
            "description": "<p>The userid of the creator of the trip</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No trip was found corresponding to the tripid in the URL path</p>"
          },
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "401/Unauthorized",
            "description": "<p>User is not authorized to create this trip.</p>"
          }
        ],
        "Error 5xx": [
          {
            "group": "Error 5xx",
            "type": "Object",
            "optional": false,
            "field": "500/InternalServerError",
            "description": "<p>Some of the trip's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo trip found with ID 1",
          "type": "json"
        },
        {
          "title": "401 Unauthorized",
          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n\nAuthorization header is missing",
          "type": "json"
        },
        {
          "title": "500 Internal Server Error",
          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n\n{\n  \"message\": Trip validation failed: tripName: Path `tripName` (`1`) is shorter than the minimum allowed length (3).\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/trips/agg/:tripid",
    "title": "Retrieve aggregata datas of a trip",
    "name": "RetrieveAggTrip",
    "group": "Trip",
    "version": "1.0.0",
    "description": "<p>Retrieves aggregata dateas of a trip.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "GET /trips/1 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLocation: https://comem-webserv-2018-2019-e.herokuapp.com/trips/agg/1\n\n[\n  {\n    \"_id\": \"5bdb19ad8cee2d018c55e6fa\",\n    \"placeid\": 1,\n    \"placeName\": \"place_1\",\n    \"placeDescription\": \"This is the description of the place_1.\",\n    \"placePicture\": \"https://muggli.one/heig/webs/missing-img.png\",\n    \"placeCreationDate\": \"2018-11-01T15:20:13.951Z\",\n    \"placeLastModDate\": \"2018-11-01T15:20:13.951Z\",\n    \"placeLatitude\": 0,\n    \"placeLongitude\": 0,\n    \"placeCorrTrip\": 1\n  },\n  {\n    \"_id\": \"5bdb1a808cee2d018c55e6fc\",\n    \"placeid\": 2,\n    \"placeName\": \"place_2\",\n    \"placeDescription\": \"This is the description of the place_2.\",\n    \"placePicture\": \"https://muggli.one/heig/webs/missing-img.png\",\n    \"placeCreationDate\": \"2018-11-01T15:23:44.008Z\",\n    \"placeLastModDate\": \"2018-11-01T15:23:44.008Z\",\n    \"placeLatitude\": 0,\n    \"placeLongitude\": 0,\n    \"placeCorrTrip\": 1\n  }\n]",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the place generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeid",
            "description": "<p>The unique identifier of the place</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeName",
            "description": "<p>The name of the place</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeDescription",
            "description": "<p>The description of the place (if any)</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placePicture",
            "description": "<p>The picture of the place, default value &quot;https://muggli.one/heig/webs/missing-img.png&quot;</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "placeCreationDate",
            "description": "<p>The date at which the place was created with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "placeLastModDate",
            "description": "<p>The date at which the place was modified with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeLatitude",
            "description": "<p>The latitude of the place</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeLongitude",
            "description": "<p>The longitude of the place</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "placeCorrTrip",
            "description": "<p>The tripid of the corresponding trip to the place</p>"
          }
        ]
      }
    },
    "filename": "routes/trips.js",
    "groupTitle": "Trip",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "Number",
            "optional": false,
            "field": "tripid",
            "description": "<p>The unique identifier of the trip to retrieve</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No trip was found corresponding to the tripid in the URL path</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo trip found with ID 1",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/trips/:tripid",
    "title": "Retrieve a trip",
    "name": "RetrieveTrip",
    "group": "Trip",
    "version": "1.0.0",
    "description": "<p>Retrieves one trip.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "GET /trips/1 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLocation: https://comem-webserv-2018-2019-e.herokuapp.com/trips/1\n\n{\n  \"_id\": \"5bd9e744e80f0065a0c7fcd6\",\n  \"tripid\": 1,\n  \"tripName\": \"trip_1\",\n  \"tripDescription\": \"This is the description of the trip_1.\",\n  \"tripCreationDate\": \"2018-10-31T17:32:52.449Z\",\n  \"tripLastModDate\": \"2018-10-31T17:32:52.449Z\",\n  \"tripCreator\": 1\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the trip generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "tripid",
            "description": "<p>The unique identifier of the trip</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "tripName",
            "description": "<p>The name of the trip</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "tripDescription",
            "description": "<p>The description of the trip (if any)</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "tripCreationDate",
            "description": "<p>The date at which the trip was created with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "tripLastModDate",
            "description": "<p>The date at which the trip was modified with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "tripCreator",
            "description": "<p>The userid of the creator of the trip</p>"
          }
        ]
      }
    },
    "filename": "routes/trips.js",
    "groupTitle": "Trip",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "Number",
            "optional": false,
            "field": "tripid",
            "description": "<p>The unique identifier of the trip to retrieve</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No trip was found corresponding to the tripid in the URL path</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo trip found with ID 1",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/trips",
    "title": "List trips",
    "name": "RetrieveTrips",
    "group": "Trip",
    "version": "1.0.0",
    "description": "<p>Retrieves a list of trips sorted by tripid (in ascending order).</p>",
    "examples": [
      {
        "title": "Example",
        "content": "GET /trips HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLocation: https://comem-webserv-2018-2019-e.herokuapp.com/trips/page=1&pageSize=10\n\n[\n  {\n    \"_id\": \"5bd9e744e80f0065a0c7fcd6\",\n    \"tripid\": 1,\n    \"tripName\": \"trip_1\",\n    \"tripDescription\": \"This is the description of the trip_1.\",\n    \"tripCreationDate\": \"2018-10-31T17:32:52.449Z\",\n    \"tripLastModDate\": \"2018-10-31T17:32:52.449Z\",\n    \"tripCreator\": 1\n  },\n  {\n    \"_id\": \"5bd6bd0637fec753c40a89bb\",\n    \"tripid\": 2,\n    \"tripName\": \"trip_2\",\n    \"tripDescription\": \"This is the description of the trip_2.\",\n    \"tripCreationDate\": \"2018-10-29T07:55:50.995Z\",\n    \"tripLastModDate\": \"2018-10-29T07:55:50.995Z\",\n    \"tripCreator\": 1\n  },\n  {\n    \"_id\": \"5bd6cbe57aa3be18a856dfbf\",\n    \"tripid\": 3,\n    \"tripName\": \"trip_3\",\n    \"tripDescription\": \"This is the description of the trip_3.\",\n    \"tripCreationDate\": \"2018-10-29T08:59:17.167Z\",\n    \"tripLastModDate\": \"2018-10-29T08:59:17.167Z\",\n    \"tripCreator\": 2\n  }\n]",
          "type": "json"
        },
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLocation: https://comem-webserv-2018-2019-e.herokuapp.com/trips?tripCreator=2\n\n[\n  {\n    \"_id\": \"5bd6cbe57aa3be18a856dfbf\",\n    \"tripid\": 3,\n    \"tripName\": \"trip_3\",\n    \"tripDescription\": \"This is the description of the trip_3.\",\n    \"tripCreationDate\": \"2018-10-29T08:59:17.167Z\",\n    \"tripLastModDate\": \"2018-10-29T08:59:17.167Z\",\n    \"tripCreator\": 2\n  }\n]",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the trip generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "tripid",
            "description": "<p>The unique identifier of the trip</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "tripName",
            "description": "<p>The name of the trip</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "tripDescription",
            "description": "<p>The description of the trip (if any)</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "tripCreationDate",
            "description": "<p>The date at which the trip was created with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "tripLastModDate",
            "description": "<p>The date at which the trip was modified with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "tripCreator",
            "description": "<p>The userid of the creator of the trip</p>"
          }
        ]
      }
    },
    "filename": "routes/trips.js",
    "groupTitle": "Trip",
    "parameter": {
      "fields": {
        "URL query parameters": [
          {
            "group": "URL query parameters",
            "type": "Number",
            "optional": true,
            "field": "tripCreator",
            "description": "<p>Select only trips by a specific tripCreator (this parameter can be given multiple times)</p>"
          },
          {
            "group": "URL query parameters",
            "type": "Number",
            "size": "1..",
            "optional": true,
            "field": "page",
            "description": "<p>The page to retrieve (defaults to 1)</p>"
          },
          {
            "group": "URL query parameters",
            "type": "Number",
            "size": "1..10",
            "optional": true,
            "field": "pageSize",
            "description": "<p>The number of elements to retrieve in one page (defaults to 10)</p>"
          }
        ],
        "Response headers": [
          {
            "group": "Response headers",
            "type": "String",
            "optional": false,
            "field": "Link",
            "description": "<p>Links to the first, previous, next and last pages of the collection (if applicable) =&gt; Custom headers (solution 2)</p>"
          }
        ]
      }
    }
  },
  {
    "type": "put",
    "url": "/trips/:tripid",
    "title": "Update a trip",
    "name": "UpdateTrip",
    "group": "Trip",
    "version": "1.0.0",
    "description": "<p>Replaces all the trip's data (the request body must represent a full, valid trip).</p>",
    "examples": [
      {
        "title": "Example",
        "content": "PUT /trips/1 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"tripName\": \"trip_1_new\",\n  \"tripDescription\": \"This is the new description of the trip_1.\",\n  \"tripCreator\": 2\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"_id\": \"5bd9e744e80f0065a0c7fcd6\",\n  \"tripid\": 1,\n  \"tripName\": \"trip_1_new\",\n  \"tripDescription\": \"This is the new description of the trip_1.\",\n  \"tripCreationDate\": \"2018-10-31T17:32:52.449Z\",\n  \"tripLastModDate\": \"2018-11-31T20:15:10.613Z\",\n  \"tripCreator\": 2\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the trip generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "tripid",
            "description": "<p>The unique identifier of the trip</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "tripName",
            "description": "<p>The name of the trip</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "tripDescription",
            "description": "<p>The description of the trip (if any)</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "tripCreationDate",
            "description": "<p>The date at which the trip was created with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "tripLastModDate",
            "description": "<p>The date at which the trip was modified with default value Date.now</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "tripCreator",
            "description": "<p>The userid of the creator of the trip</p>"
          }
        ]
      }
    },
    "filename": "routes/trips.js",
    "groupTitle": "Trip",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "Number",
            "optional": false,
            "field": "tripid",
            "description": "<p>The unique identifier of the trip to retrieve</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "3..",
            "optional": false,
            "field": "tripName",
            "description": "<p>The name of the trip</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": true,
            "field": "tripDescription",
            "description": "<p>The description of the trip</p>"
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "tripCreator",
            "description": "<p>The userid of the creator of the trip</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No trip was found corresponding to the tripid in the URL path</p>"
          },
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "401/Unauthorized",
            "description": "<p>User is not authorized to create this trip.</p>"
          }
        ],
        "Error 5xx": [
          {
            "group": "Error 5xx",
            "type": "Object",
            "optional": false,
            "field": "500/InternalServerError",
            "description": "<p>Some of the trip's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo trip found with ID 1",
          "type": "json"
        },
        {
          "title": "401 Unauthorized",
          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n\nAuthorization header is missing",
          "type": "json"
        },
        {
          "title": "500 Internal Server Error",
          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n\n{\n  \"message\": Trip validation failed: tripName: Path `tripName` (`1`) is shorter than the minimum allowed length (3).\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "post",
    "url": "/users/signup",
    "title": "Create a user",
    "name": "CreateUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Registers a new user.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "POST /users/signup HTTP/1.1\nContent-Type: application/json\n\n{\n  \"email\": \"user1@email.com\",\n  \"password\": \"user1password\"\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "201 Created",
          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://comem-webserv-2018-2019-e.herokuapp.com/users/1\n\n{\n  \"_id\": \"5bd8b53ffc7de055c4ca07aa\",\n  \"userid\": 1,\n  \"email\": \"user1@email.com\",\n  \"password\": \"$2b$10$ju7qmV4h6syfEC313nJ4FeZ11Z5AM/tU6roiRIHytViwUuqdtNZgC\",\n  \"registrationDate\": \"2018-10-30T19:47:11.613Z\"\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the user generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "userid",
            "description": "<p>The unique identifier of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>The email of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>The password of the user protected by a cryptographic hash function</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "registrationDate",
            "description": "<p>The date at which the user was registered with default value Date.now</p>"
          }
        ]
      }
    },
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/",
            "optional": false,
            "field": "email",
            "description": "<p>The email of the user (must be unique)</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>The password of the user</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "409/Conflict",
            "description": "<p>User's email already exists</p>"
          }
        ],
        "Error 5xx": [
          {
            "group": "Error 5xx",
            "type": "Object",
            "optional": false,
            "field": "500/InternalServerError",
            "description": "<p>Some of the user's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "409 Conflict",
          "content": "HTTP/1.1 409 Conflict\nContent-Type: application/json\n\n{\n  \"message\": \"Mail exists\"\n}",
          "type": "json"
        },
        {
          "title": "500 Internal Server Error",
          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n\n{\n  \"message\": \"User validation failed\",\n  \"error\": {\n     \"errors\": {\n         \"email\": {\n               \"message\": \"Please fill a valid email adress\",\n               \"name\": \"ValidatorError\",\n               \"properties\": {\n                   \"message\": \"Please fill a valid email adress\",\n                   \"type\": \"user defined\",\n                   \"path\": \"email\",\n                   \"value\": \"foo\"\n               },\n               \"kind\": \"user defined\",\n               \"path\": \"email\",\n               \"value\": \"foo\",\n               \"$isValidatorError\": true\n           }\n       },\n       \"_message\": \"User validation failed\",\n       \"message\": \"User validation failed: email: Please fill a valid email adress\",\n       \"name\": \"ValidationError\"\n  }\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "delete",
    "url": "/users/:userid",
    "title": "Delete a user",
    "name": "DeleteUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Permanently deletes a user.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "DELETE /users/1 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "204 No Content",
          "content": "HTTP/1.1 204 No Content",
          "type": "json"
        }
      ]
    },
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "Number",
            "optional": false,
            "field": "userid",
            "description": "<p>The unique identifier of the user to retrieve</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No user was found corresponding to the userid in the URL path</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo user found with ID 1",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "post",
    "url": "/users/login",
    "title": "Login a user",
    "name": "LoginUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Login an existing user.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "POST /users/login HTTP/1.1\nContent-Type: application/json\n\n{\n  \"email\": \"user1@email.com\",\n  \"password\": \"user1password\"\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 Ok",
          "content": "HTTP/1.1 200 Ok\nContent-Type: application/json\nLocation: https://comem-webserv-2018-2019-e.herokuapp.com/users/1\n\n{\n  \"message\": \"Auth successful\",\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXIxQGVtYWlsLmNvbSIsInVzZXJpZCI6MSwiaWF0IjoxNTQwOTMwMjE1LCJleHAiOjE1NDE1MzUwMTV9.TGkLNJdB1ls9gI0JhUOdPqoDzSAjqVbI0971BAY1E_o\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/",
            "optional": false,
            "field": "email",
            "description": "<p>The email of the user (must be unique)</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>The password of the user</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "401/Unauthorized",
            "description": "<p>Email or password is missing or is not autorized for login</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "401 Unauthorized",
          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n\n{\n  \"message\": \"Auth failed\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "patch",
    "url": "/users/:userid",
    "title": "Partially update a user",
    "name": "PartiallyUpdateUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Partially updates a user's data (only the properties found in the request body will be updated). All properties are optional.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "PATCH /users/1 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"email\": \"user1@email.com\"\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"_id\": \"5bd8b53ffc7de055c4ca07aa\",\n  \"userid\": 1,\n  \"email\": \"user1@email.com\",\n  \"password\": \"$2b$10$ju7qmV4h6syfEC313nJ4FeZ11Z5AM/tU6roiRIHytViwUuqdtNZgC\",\n  \"registrationDate\": \"2018-10-30T19:47:11.613Z\"\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the user generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "userid",
            "description": "<p>The unique identifier of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>The email of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>The password of the user protected by a cryptographic hash function</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "registrationDate",
            "description": "<p>The date at which the user was registered with default value Date.now</p>"
          }
        ]
      }
    },
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "Number",
            "optional": false,
            "field": "userid",
            "description": "<p>The unique identifier of the user to retrieve</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/",
            "optional": false,
            "field": "email",
            "description": "<p>The email of the user (must be unique)</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>The password of the user</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No user was found corresponding to the userid in the URL path</p>"
          },
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "409/Conflict",
            "description": "<p>User's email already exists</p>"
          }
        ],
        "Error 5xx": [
          {
            "group": "Error 5xx",
            "type": "Object",
            "optional": false,
            "field": "500/InternalServerError",
            "description": "<p>Some of the user's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo user found with ID 1",
          "type": "json"
        },
        {
          "title": "409 Conflict",
          "content": "HTTP/1.1 409 Conflict\nContent-Type: application/json\n\n{\n  \"message\": \"Mail exists\"\n}",
          "type": "json"
        },
        {
          "title": "500 Internal Server Error",
          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n\n{\n  \"message\": \"User validation failed\",\n  \"error\": {\n     \"errors\": {\n         \"email\": {\n               \"message\": \"Please fill a valid email adress\",\n               \"name\": \"ValidatorError\",\n               \"properties\": {\n                   \"message\": \"Please fill a valid email adress\",\n                   \"type\": \"user defined\",\n                   \"path\": \"email\",\n                   \"value\": \"foo\"\n               },\n               \"kind\": \"user defined\",\n               \"path\": \"email\",\n               \"value\": \"foo\",\n               \"$isValidatorError\": true\n           }\n       },\n       \"_message\": \"User validation failed\",\n       \"message\": \"User validation failed: email: Please fill a valid email adress\",\n       \"name\": \"ValidationError\"\n  }\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/users/:userid",
    "title": "Retrieve a user",
    "name": "RetrieveUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Retrieves one user.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "GET /users/1 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLocation: https://comem-webserv-2018-2019-e.herokuapp.com/users/1\n\n{\n  \"_id\": \"5bd8b53ffc7de055c4ca07aa\",\n  \"userid\": 1,\n  \"email\": \"user1@email.com\",\n  \"password\": \"$2b$10$ju7qmV4h6syfEC313nJ4FeZ11Z5AM/tU6roiRIHytViwUuqdtNZgC\",\n  \"registrationDate\": \"2018-10-30T19:47:11.613Z\"\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the user generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "userid",
            "description": "<p>The unique identifier of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>The email of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>The password of the user protected by a cryptographic hash function</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "registrationDate",
            "description": "<p>The date at which the user was registered with default value Date.now</p>"
          }
        ]
      }
    },
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "Number",
            "optional": false,
            "field": "userid",
            "description": "<p>The unique identifier of the user to retrieve</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No user was found corresponding to the userid in the URL path</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo user found with ID 1",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/users",
    "title": "List users",
    "name": "RetrieveUsers",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Retrieves a list of users sorted by userid (in ascending order).</p>",
    "examples": [
      {
        "title": "Example",
        "content": "GET /users HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLocation: https://comem-webserv-2018-2019-e.herokuapp.com/users\n\n[\n  {\n    \"_id\": \"5bd8b53ffc7de055c4ca07aa\",\n    \"userid\": 1,\n    \"email\": \"user1@email.com\",\n    \"password\": \"$2b$10$ju7qmV4h6syfEC313nJ4FeZ11Z5AM/tU6roiRIHytViwUuqdtNZgC\",\n    \"registrationDate\": \"2018-10-30T19:47:11.613Z\"\n  },\n  {\n    \"_id\": \"5bd8c61c580be55df4452243\",\n    \"userid\": 2,\n    \"email\": \"user2@email.com\",\n    \"password\": \"$2b$10$NWz7jXlfvPH1Bqk09QriSewmnCt780wThfqZQGTcQvMp9MUP9QjwS\",\n    \"registrationDate\": \"2018-10-30T20:59:08.422Z\"\n  }\n]",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the user generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "userid",
            "description": "<p>The unique identifier of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>The email of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>The password of the user protected by a cryptographic hash function</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "registrationDate",
            "description": "<p>The date at which the user was registered with default value Date.now</p>"
          }
        ]
      }
    },
    "filename": "routes/users.js",
    "groupTitle": "User"
  },
  {
    "type": "put",
    "url": "/users/:userid",
    "title": "Update a user",
    "name": "UpdateUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Replaces all the user's data (the request body must represent a full, valid user).</p>",
    "examples": [
      {
        "title": "Example",
        "content": "PUT /users/1 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"email\": \"user1new@email.com\",\n  \"password\": \"user1newpassword\"\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"_id\": \"5bd8b53ffc7de055c4ca07aa\",\n  \"userid\": 1,\n  \"email\": \"user1new@email.com\",\n  \"password\": \"$2b$10$f1ZgJx7NRbXOud0PJ01K1ul5iWd659E03ds4Mbl4N8ysNn99vw7Ge\",\n  \"registrationDate\": \"2018-10-30T19:47:11.613Z\"\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the user generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "userid",
            "description": "<p>The unique identifier of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>The email of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>The password of the user protected by a cryptographic hash function</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "registrationDate",
            "description": "<p>The date at which the user was registered with default value Date.now</p>"
          }
        ]
      }
    },
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "Number",
            "optional": false,
            "field": "userid",
            "description": "<p>The unique identifier of the user to retrieve</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/",
            "optional": false,
            "field": "email",
            "description": "<p>The email of the user (must be unique)</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>The password of the user</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No user was found corresponding to the userid in the URL path</p>"
          },
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "409/Conflict",
            "description": "<p>User's email already exists</p>"
          }
        ],
        "Error 5xx": [
          {
            "group": "Error 5xx",
            "type": "Object",
            "optional": false,
            "field": "500/InternalServerError",
            "description": "<p>Some of the user's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo user found with ID 1",
          "type": "json"
        },
        {
          "title": "409 Conflict",
          "content": "HTTP/1.1 409 Conflict\nContent-Type: application/json\n\n{\n  \"message\": \"Mail exists\"\n}",
          "type": "json"
        },
        {
          "title": "500 Internal Server Error",
          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n\n{\n  \"message\": \"User validation failed\",\n  \"error\": {\n     \"errors\": {\n         \"email\": {\n               \"message\": \"Please fill a valid email adress\",\n               \"name\": \"ValidatorError\",\n               \"properties\": {\n                   \"message\": \"Please fill a valid email adress\",\n                   \"type\": \"user defined\",\n                   \"path\": \"email\",\n                   \"value\": \"foo\"\n               },\n               \"kind\": \"user defined\",\n               \"path\": \"email\",\n               \"value\": \"foo\",\n               \"$isValidatorError\": true\n           }\n       },\n       \"_message\": \"User validation failed\",\n       \"message\": \"User validation failed: email: Please fill a valid email adress\",\n       \"name\": \"ValidationError\"\n  }\n}",
          "type": "json"
        }
      ]
    }
  }
]
