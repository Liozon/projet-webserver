[
  {
    "type": "post",
    "url": "/users/signup",
    "title": "Create a user",
    "name": "CreateUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Registers a new user.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "POST /users/signup HTTP/1.1\nContent-Type: application/json\n\n{\n  \"email\": \"user1@email.com\",\n  \"password\": \"user1password\"\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "201 Created",
          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://comem-webserv-2018-2019-e.herokuapp.com/users/1\n\n{\n  \"_id\": \"5bd8b53ffc7de055c4ca07aa\",\n  \"userid\": 1,\n  \"email\": \"user1@email.com\",\n  \"password\": \"$2b$10$ju7qmV4h6syfEC313nJ4FeZ11Z5AM/tU6roiRIHytViwUuqdtNZgC\",\n  \"registrationDate\": \"2018-10-30T19:47:11.613Z\"\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the user generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "userid",
            "description": "<p>The unique identifier of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>The email of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>The password of the user protected by a cryptographic hash function</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "registrationDate",
            "description": "<p>The date at which the user was registered with default value Date.now</p>"
          }
        ]
      }
    },
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/",
            "optional": false,
            "field": "email",
            "description": "<p>The email of the user (must be unique)</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>The password of the user</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "409/Conflict",
            "description": "<p>Error User's email already exists</p>"
          }
        ],
        "Error 5xx": [
          {
            "group": "Error 5xx",
            "type": "Object",
            "optional": false,
            "field": "500/InternalServerError",
            "description": "<p>Some of the user's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "409 Conflict",
          "content": "HTTP/1.1 409 Conflict\nContent-Type: application/json\n\n{\n  \"message\": \"Mail exists\"\n}",
          "type": "json"
        },
        {
          "title": "500 Internal Server Error",
          "content": "HTTP/1.1 500 Internal Server Error\nContent-Type: application/json\n\n{\n  \"message\": \"User validation failed\",\n  \"error\": {\n     \"errors\": {\n         \"email\": {\n               \"message\": \"Please fill a valid email adress\",\n               \"name\": \"ValidatorError\",\n               \"properties\": {\n                   \"message\": \"Please fill a valid email adress\",\n                   \"type\": \"user defined\",\n                   \"path\": \"email\",\n                   \"value\": \"foo\"\n               },\n               \"kind\": \"user defined\",\n               \"path\": \"email\",\n               \"value\": \"foo\",\n               \"$isValidatorError\": true\n           }\n       },\n       \"_message\": \"User validation failed\",\n       \"message\": \"User validation failed: email: Please fill a valid email adress\",\n       \"name\": \"ValidationError\"\n  }\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "post",
    "url": "/users/login",
    "title": "Login a user",
    "name": "LoginUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Login an existing user.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "POST /users/login HTTP/1.1\nContent-Type: application/json\n\n{\n  \"email\": \"user1@email.com\",\n  \"password\": \"user1password\"\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 Ok",
          "content": "HTTP/1.1 200 Ok\nContent-Type: application/json\nLocation: https://comem-webserv-2018-2019-e.herokuapp.com/users/1\n\n{\n  \"message\": \"Auth successful\",\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXIxQGVtYWlsLmNvbSIsInVzZXJpZCI6MSwiaWF0IjoxNTQwOTMwMjE1LCJleHAiOjE1NDE1MzUwMTV9.TGkLNJdB1ls9gI0JhUOdPqoDzSAjqVbI0971BAY1E_o\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/",
            "optional": false,
            "field": "email",
            "description": "<p>The email of the user (must be unique)</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>The password of the user</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "401/Unauthorized",
            "description": "<p>Email or password is missing or is not autorized for login</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "401 Unauthorized",
          "content": "HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n\n{\n  \"message\": \"Auth failed\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/users/:userid",
    "title": "List one user",
    "name": "RetrieveUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Show one user.</p>",
    "parameter": {
      "fields": {
        "URL query parameters": [
          {
            "group": "URL query parameters",
            "type": "String",
            "optional": true,
            "field": "gender",
            "description": "<p>Select only people of the specified gender</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example",
        "content": "GET /user?gender=male&page=2&pageSize=50 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLink: &lt;https://evening-meadow-25867.herokuapp.com/user?page=1&pageSize=50&gt;; rel=\"first prev\"\n\n[\n  {\n    \"_id\": \"5bd8b53ffc7de055c4ca07aa\",\n    \"userid\": 1,\n    \"email\": \"user1@email.com\",\n    \"password\": \"$2b$10$ju7qmV4h6syfEC313nJ4FeZ11Z5AM/tU6roiRIHytViwUuqdtNZgC\",\n    \"registrationDate\": \"2018-10-30T19:47:11.613Z\"\n  }\n]",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the user generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "userid",
            "description": "<p>The unique identifier of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>The email of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>The password of the user protected by a cryptographic hash function</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "registrationDate",
            "description": "<p>The date at which the user was registered with default value Date.now</p>"
          }
        ]
      }
    },
    "filename": "routes/users.js",
    "groupTitle": "User"
  },
  {
    "type": "get",
    "url": "/users",
    "title": "List users",
    "name": "RetrieveUsers",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Retrieves a paginated list of users sorted by userid (in ascending order).</p>",
    "parameter": {
      "fields": {
        "URL query parameters": [
          {
            "group": "URL query parameters",
            "type": "String",
            "optional": true,
            "field": "gender",
            "description": "<p>Select only people of the specified gender</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example",
        "content": "GET /user?gender=male&page=2&pageSize=50 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLink: &lt;https://evening-meadow-25867.herokuapp.com/user?page=1&pageSize=50&gt;; rel=\"first prev\"\n\n[\n  {\n    \"_id\": \"5bd8b53ffc7de055c4ca07aa\",\n    \"userid\": 1,\n    \"email\": \"user1@email.com\",\n    \"password\": \"$2b$10$ju7qmV4h6syfEC313nJ4FeZ11Z5AM/tU6roiRIHytViwUuqdtNZgC\",\n    \"registrationDate\": \"2018-10-30T19:47:11.613Z\"\n  },\n  {\n    \"_id\": \"5bd8c61c580be55df4452243\",\n    \"userid\": 2,\n    \"email\": \"user2@email.com\",\n    \"password\": \"$2b$10$NWz7jXlfvPH1Bqk09QriSewmnCt780wThfqZQGTcQvMp9MUP9QjwS\",\n    \"registrationDate\": \"2018-10-30T20:59:08.422Z\"\n  }\n]",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>A unique identifier for the user generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "Number",
            "optional": false,
            "field": "userid",
            "description": "<p>The unique identifier of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>The email of the user</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>The password of the user protected by a cryptographic hash function</p>"
          },
          {
            "group": "Response body",
            "type": "Date",
            "optional": false,
            "field": "registrationDate",
            "description": "<p>The date at which the user was registered with default value Date.now</p>"
          }
        ]
      }
    },
    "filename": "routes/users.js",
    "groupTitle": "User"
  }
]
